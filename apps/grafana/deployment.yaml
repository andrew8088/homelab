apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
      containers:
      - name: grafana
        image: grafana/grafana:11.1.3
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: GF_SECURITY_ADMIN_PASSWORD
        - name: GF_INSTALL_PLUGINS
          value: ""
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        readinessProbe:
          httpGet:
            path: /robots.txt
            port: 3000
          initialDelaySeconds: 10
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /robots.txt
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 30
      - name: tailscale
        image: tailscale/tailscale:latest
        env:
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          value: "grafana"
        - name: TS_SERVE_CONFIG
          value: "/config/serve.json"
        - name: TS_STATE_DIR
          value: /tmp
        - name: TS_USERSPACE
          value: "true"
        - name: TS_KUBE_SECRET
          value: "tailscale-state"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: serve-config
          mountPath: /config
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: serve-config
        configMap:
          name: grafana-serve-config